package com.niit.RestController;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.niit.dao.ForumDao;
import com.niit.model.Forum;

@RestController
@RequestMapping("api")
public class ForumController {
	@Autowired
	Forum forum;
	@Autowired
	private ForumDao forumDao;

	@PostMapping(value = "/allForums")
	public ResponseEntity<List<Forum>> getAllForum(@RequestBody Forum forum) {
		return new ResponseEntity<List<Forum>>(forumDao.getAllForum(forum.getUserEmailId()), HttpStatus.OK);
	}

	@PostMapping("/newForum")
	public ResponseEntity<Forum> newForum(@RequestBody Forum forum) {
		boolean flag = forumDao.addForum(forum);
		if (flag) {
			return new ResponseEntity<Forum>(forumDao.getForumByName(forum.getForumName()), HttpStatus.OK);
		}

		else {
			return new ResponseEntity<Forum>(forum, HttpStatus.BAD_REQUEST);
		}
	}
	@GetMapping(value="forum/{name}")
	public ResponseEntity<Forum> getForumByName(@PathVariable("name") String forumName) {
		Forum forum= forumDao.getForumByName(forumName);
		return new ResponseEntity<Forum>(forum,HttpStatus.OK);
	}

	@PostMapping("forum/update")
	public ResponseEntity<Forum> updateForum(@RequestBody Forum forum) {
		boolean flag = forumDao.updateForum(forum);
		if (flag) {
			return new ResponseEntity<Forum>(forumDao.getForumByName(forum.getUserEmailId()), HttpStatus.OK);
		} else {
			return new ResponseEntity<Forum>(forum, HttpStatus.BAD_REQUEST);
		}
	}

	@DeleteMapping(value = "deleteForum/{id}")
	public ResponseEntity deleteForum(@PathVariable("id") int forumId) {
		forumDao.deleteForum(forumId);
		return new ResponseEntity(HttpStatus.NO_CONTENT);
	}

	@ExceptionHandler(IllegalArgumentException.class)
	@ResponseStatus(value = HttpStatus.BAD_REQUEST, reason = "Illegal request, please verify your payload")
	public void handleClientErrors(Exception ex) {

	}

	@ExceptionHandler(Exception.class)
	@ResponseStatus(value = HttpStatus.INTERNAL_SERVER_ERROR, reason = "Internal Server Error")
	public void handleServerErrors(Exception ex) {

	}

}